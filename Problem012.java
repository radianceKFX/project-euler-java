import projecteuler.Maths;

/** https://projecteuler.net/problem=12
Highly divisible triangular number
Problem 12

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 n|    t| divisors      | divisor count
 --------------------------------------
 1|    1| 1             | 1
 2|    3| 1,3           | 2
 3|    6| 1,2,3,6       | 4
 4|   10| 1,2,5,10      | 4
 5|   15| 1,3,5,15      | 4
 6|   21| 1,3,7,21      | 4
 7|   28| 1,2,4,7,14,28 | 6

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
 **/

public class Problem012 {
    public static void main(String[] args){
        int n = 0;              // first natural number -1
        int triangleNumber = 0; // first triangle number -1
        int divisorCount = Maths.countPositiveDivisors(triangleNumber);
        int divisorTarget = 500; // triange number should have over this much divisors
        
        while(divisorCount<divisorTarget+1){  //divisorCount <= divisorTarget){
            n++;
            triangleNumber += n;
            divisorCount = Maths.countPositiveDivisors(triangleNumber);                    
            
            //The following line is to verify the algoritm
            System.out.printf("%d: Triangle number %d with %d divisors %n",n,triangleNumber,divisorCount);    
            }
        System.out.printf("The first triangle number with more than 500 divisors is %n"
                        + "triangle number %d (with %d divisors) %n",
                               triangleNumber,     divisorCount);        
    }    
}
